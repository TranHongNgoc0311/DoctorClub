@model IEnumerable<DoctorClub.Models.DataModels.Posts>

<div class="community-posts-wrapper bb-radius">
    <table class="table table-striped table-hover table-bordered" id="my_posts_table">
        @foreach (var item in Model)
        {
            <tr id="@item.Id">
                <td>
                    <div class="community-post style-two feature docly spider richard">
                        <div class="post-content">
                            <div class="entry-content">
                                <h3 class="post-title">
                                    <a href="@Url.Action("Details","Posts",new { slug = item.Slug})">
                                        @Html.DisplayFor(modelItem => item.Title)
                                    </a>
                                </h3>
                                @if (item.Status == false)
                                {
                                    <div class="cat-wrap">
                                        <a class="badge color-yellow" href="#">Wait admin accept</a>
                                    </div>
                                }

                                <ul class="meta">
                                    <li>
                                        @{
                                            var content = Html.Raw(HttpUtility.HtmlDecode(item.Content));
                                        }
                                        <a href="@Url.Action("Details","Posts",new { slug = item.Slug})">
                                            @System.Text.RegularExpressions.Regex.Replace(content.ToHtmlString(), "<.*?>", String.Empty).ToString().Substring(0, 49)
                                        </a>
                                    </li>
                                </ul>
                                <ul class="meta">
                                    <li>
                                        <i class="icon_pencil"></i>Posted: @Html.DisplayFor(modelItem => item.Created)
                                    </li>
                                    <li>
                                        <i class="icon_calendar"></i>updated: @Html.DisplayFor(modelItem => item.Updated)
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="post-meta-wrapper">
                            <ul class="post-meta-info">
                                <li><a href="#"><i class="icon_chat_alt"></i>@Html.DisplayFor(modelItem => item.Comments.Count)</a></li>
                                <li><a href="#"><i class="fa fa-eye"></i>@Html.DisplayFor(modelItem => item.Views)</a></li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.community-post style-two -->
                    <div class="row" style="margin-top: 10px;">
                        <div class="container-fluid">
                            <a class="nav_btn btn_small_two icon_btn" href="@Url.Action("Edit","Posts",new { slug=item.Slug})"><i class="icon_cogs"></i>Edit</a>
                            <a class="nav_btn btn_small_two icon_btn" onclick="userDeletePost('@item.Id')" href="#"><i class="icon_trash"></i>Delete</a>
                        </div>
                    </div>
                </td>
            </tr>
        }

    </table>
    <div class="pagination-wrapper">
        <ul class="post-pagination">
            @{
                int position;
                int pageCurrent = ViewBag.pageCurrent;
                float numSize = ViewBag.numSize;
                var dot = "...";
                if (numSize > 1)
                {
                    <li class="prev-post @(pageCurrent>1?"":"pegi-disable")">
                        <a onclick="UserPostPagination(@(pageCurrent-1))"><i class="arrow_carrot-left"></i></a>
                    </li>
                    for (position = 1; position <= numSize; position++)
                    {

                        if (position == pageCurrent)
                        {

                            <li><a onclick="UserPostPagination(@position)" class="active">@position</a></li>
                        }

                        else
                        {
                            if (position == 1 || position >= pageCurrent - 1 && position < pageCurrent || position == numSize || position > pageCurrent && position <= pageCurrent + 1)
                            {
                                <li><a onclick="UserPostPagination(@position)">@position</a></li>
                            }
                            else
                            {
                                <li>@dot</li>
                                dot = "";
                            }
                        }

                    }
                    <li class="next-post @(pageCurrent > 0 && pageCurrent < numSize?"":"pegi-disable")">
                        <a onclick="UserPostPagination(@(pageCurrent+1))"><i class="arrow_carrot-right"></i></a>
                    </li>
                }

            }
        </ul>
    </div>
</div>
